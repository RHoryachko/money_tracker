from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from datetime import datetime

from services.api_client import APIClient
from keyboards.main_menu import main_menu_kb


router = Router()
api_client = APIClient()

class AddExpenseStates(StatesGroup):
    name = State()
    date = State()
    amount = State()


@router.message(F.text == "–î–æ–¥–∞—Ç–∏ –≤–∏—Ç—Ä–∞—Ç—É üí∞")
async def start_add_expense(message: Message, state: FSMContext):
    await message.answer("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –≤–∏—Ç—Ä–∞—Ç–∏ üìù:")
    await state.set_state(AddExpenseStates.name)

@router.message(AddExpenseStates.name)
async def process_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç—ñ dd.mm.YYYY üìÖ:")
    await state.set_state(AddExpenseStates.date)

@router.message(AddExpenseStates.date)
async def process_date(message: Message, state: FSMContext):
    try:
        date = datetime.strptime(message.text, "%d.%m.%Y").date()
        await state.update_data(date=date)
        await message.answer("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —Å—É–º—É –≤ –≥—Ä–∏–≤–Ω—è—Ö üí∞:")
        await state.set_state(AddExpenseStates.amount)
    except ValueError:
        await message.answer("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç–∏. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç dd.mm.YYYY üìÖ.")

@router.message(AddExpenseStates.amount)
async def process_amount(message: Message, state: FSMContext):
    try:
        amount = float(message.text)
        if amount <= 0:
            raise ValueError
        
        data = await state.get_data()
        response = await api_client.create_expense(
            user_id=message.from_user.id,
            name=data['name'],
            date=data['date'],
            amount=amount
        )
        
        await message.answer(
            f"–í–∏—Ç—Ä–∞—Ç–∞ —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–∞!\n"
            f"–ù–∞–∑–≤–∞: {data['name']}\n"
            f"–î–∞—Ç–∞: {data['date'].strftime('%d.%m.%Y')}\n"
            f"–°—É–º–∞: {amount} UAH",
            reply_markup=main_menu_kb()
        )
        await state.clear()
    except ValueError:
        await message.answer("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω—É –ø–æ–∑–∏—Ç–∏–≤–Ω—É —Å—É–º—É üí∞.")